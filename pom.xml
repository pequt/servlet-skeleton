<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>pequt</groupId>
	<artifactId>servlet-skeleton</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>war</packaging>

	<name>servlet-skeleton</name>
	<url>http://maven.apache.org</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<build>
		<!-- copy resource files into WEB-INF/classes, mainly for log4j.xml -->
		<resources>
			<resource>
				<directory>src/main/java</directory>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
		</resources>

		<plugins>
			<!-- place jsp and xml files -->
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.1.1</version>
				<configuration>
					<warSourceDirectory>webapp</warSourceDirectory>
					<webappDirectory>../deploy</webappDirectory>
				</configuration>
			</plugin>
			<!-- JDK version, source encoding -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<!-- enable eclipse's tomcat running support -->
			<plugin>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.8</version>
				<configuration>
					<!-- we don't like the project name appears in every url. like... -->
					<!-- http://localhost:8080/ "servlet-skeleton" / in -->
					<!-- http://localhost:8080/ "servlet-skeleton" / out -->
					<!-- http://localhost:8080/ "servlet-skeleton" / blah blah... -->
					<!-- below option will ignore that -->
					<wtpContextName>/</wtpContextName>
					
					<!-- 1.5 or 2.0. seems like it doesn't matter. -->
					<wtpversion>2.0</wtpversion>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<dependencies>
		<!-- servlet api, jstl -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
    		<groupId>javax.servlet</groupId>
		    <artifactId>jstl</artifactId>
    		<version>1.2</version>
    		<scope>runtime</scope>
		</dependency>

		<!-- spring 3. no all-in-one artifact like 2.5 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>3.0.5.RELEASE</version>
			<exclusions>
				<!-- see http://blog.springsource.com/2009/12/04/logging-dependencies-in-spring/ -->
				<!-- I don't like commons-logging :) -->
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>3.0.5.RELEASE</version>
		</dependency>
		
		<!-- replace excluded commons-logging with slf4j - needed in spring 3 core -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>1.6.1</version>
			<scope>runtime</scope>
		</dependency>

		<!-- ehcache with spring 3 annotations -->
		<!-- spring 3 version is in this artifact pom. watch out for version conflict! -->
		<dependency>
			<groupId>com.googlecode.ehcache-spring-annotations</groupId>
			<artifactId>ehcache-spring-annotations</artifactId>
			<version>1.1.3</version>
		</dependency>

		<!-- ehcache-core -->
		<dependency>
			<groupId>net.sf.ehcache</groupId>
			<artifactId>ehcache-core</artifactId>
			<version>2.4.2</version>
		</dependency>
		
		<!-- default annotation caching works by inteface-proxying only - should first make interface then make class -->
		<!-- this library enables direct class only caching - just make a class then give annotation - then it will work -->
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib-nodep</artifactId>
			<version>2.2</version>
			<scope>runtime</scope>
		</dependency>
		
		<!-- commons -->
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.6</version>
		</dependency>
		
		<!-- jackson json parser / generator -->
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>1.8.2</version>
		</dependency>

		<!-- log4j + slj4j facade. USE slf4j syntax! -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.6.1</version>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.16</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.6.1</version>
			<scope>runtime</scope>
		</dependency>

		<!-- test -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.8.5</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

</project>